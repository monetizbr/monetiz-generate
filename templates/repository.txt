import * as Boom from "boom";

import { {{ENTITY_CAPITALIZE}} } from "@models/{{ENTITY_LOWERCASE}}.model";
import { Repository, EntityRepository, getRepository } from "typeorm";
import { omitBy, isNil } from "lodash";

@EntityRepository({{ENTITY_CAPITALIZE}})
export class {{ENTITY_CAPITALIZE}}Repository extends Repository<{{ENTITY_CAPITALIZE}}>  {

  constructor() { super(); }

  /**
   * Get a list of {{ENTITY_LOWERCASE}}s according to current query parameters
   * 
   * @public
   */
  public async list({ filter = 0, page = 1, limit = 9 }) {
    
      const repository = getRepository({{ENTITY_CAPITALIZE}});
      const options = omitBy({ /** TODO: fieldOne, fieldTwo */ }, isNil);
      
      const {{ENTITY_PLURALIZE}} = await repository.find({
        where: options,
        skip: ( page - 1 ) * limit,
        take: limit
      });

      return {{ENTITY_PLURALIZE}};
    }
  }
}
